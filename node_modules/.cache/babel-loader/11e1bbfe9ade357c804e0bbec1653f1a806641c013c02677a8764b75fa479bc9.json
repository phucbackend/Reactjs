{"ast":null,"code":"var _jsxFileName = \"D:\\\\Reactjs_Nhom8\\\\complete\\\\Reactjs\\\\src\\\\Components\\\\Bill.js\",\n  _s = $RefreshSig$();\n// import Modal from \"react-modal\";\n// import \"../Styles/Bill.css\";\n\n// export default function OrderBill({ isOpen, onRequestClose }) {\n//   // Calculate total price\n//   // const totalPrice = orderItems.reduce((sum, item) => sum + item.total, 0);\n\n//   return (\n//     // <Modal\n//     //   isOpen={isOpen}\n//     //   onRequestClose={onRequestClose}\n//     //   contentLabel=\"Order Bill\"\n//     //   className=\"modal-content\"\n//     //   overlayClassName=\"modal-overlay\"\n//     // >\n//     //   <div className=\"order-container\">\n//     //     <div className=\"header\">\n//     //       <span className=\"store-name\">Order History</span>\n//     //     </div>\n//     //     <div className=\"order-details\">\n//     //       {\"Dùng map() để lập và lấy ra các thuộc tính của bill\".map(\n//     //         (item, index) => (\n//     //           <div key={index} className=\"product-info\">\n//     //             {/* name */}\n//     //             {/* address */}\n//     //             {/* tên sản phẩm */}\n//     //             {/* Giá */}\n//     //             {/* Số lượng */}\n//     //             {/* Tổng tiền của sản phẩm này */}\n//     //             {/* Ngày đặt */}\n\n//     //             {/* Dựa vào ngày đặt từ \"bill\" nếu mà có 2 hoặc nhiều sản phẩm trùng ngày đặt thì phân loại nó thành 1 khung , như liệu mẫu như sau */}\n//     //             {/* {/* name và address là thông tin chung cho cả 2 hoặc nhiều bill */}\n//     //             {/* tên sản phẩm 1 */}\n//     //             {/* Giá của sản phẩm 1*/}\n//     //             {/* Số lượng của sản phẩm 1 */}\n//     //             {/* Tổng tiền của sản phẩm 1 */}\n//     //             {/* ---- */}\n//     //             {/* tên sản phẩm 2 */}\n//     //             {/* Giá của sản phẩm 2*/}\n//     //             {/* Số lượng của sản phẩm 2 */}\n//     //             {/* Tổng tiền của sản phẩm 2 */}\n//     //             {/* Ghi tổng tiền của 2 sản phẩm trên */}\n//     //           </div>\n//     //         )\n//     //       )}\n//     //     </div>\n//     //   </div>\n//     // </Modal>\n//     <div></div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import Modal from \"react-modal\";\n// import \"../Styles/Bill.css\";\n\n// // Sample data (normally this would come from your client side storage\n\n// export default function OrderBill({ isOpen, onRequestClose }) {\n//   const [bills, setBills] = useState([]);\n//   const getBills = JSON.parse(localStorage.getItem(\"bill\")) || [];\n//   setBills(getBills);\n//   // Group bills by order date\n//   const groupBillsByDate = (bills) => {\n//     return bills.reduce((groups, bill) => {\n//       const date = new Date(bill.id).toLocaleDateString();\n//       if (!groups[date]) {\n//         groups[date] = [];\n//       }\n//       groups[date].push(bill);\n//       return groups;\n//     }, {});\n//   };\n\n//   const groupedBills = groupBillsByDate(bills);\n//   return (\n//     <Modal\n//       isOpen={isOpen}\n//       onRequestClose={onRequestClose}\n//       contentLabel=\"Order Bill\"\n//       className=\"modal-content\"\n//       overlayClassName=\"modal-overlay\"\n//     >\n//       <div className=\"order-container\">\n//         <div className=\"header\">\n//           <span className=\"store-name\">Order History</span>\n//         </div>\n//         <div className=\"order-details\">\n//           {Object.keys(groupedBills).map((date, index) => {\n//             const total = groupedBills[date].reduce(\n//               (sum, bill) => sum + bill.totalPrice,\n//               0\n//             );\n//             const representativeBill = groupedBills[date][0];\n//             return (\n//               <div key={index} className=\"date-group\">\n//                 <div className=\"date\">{date}</div>\n//                 <div className=\"common-info-inline\">\n//                   <div>Name: {representativeBill.username}</div>\n//                   <div>Address: {representativeBill.address}</div>\n//                 </div>\n//                 <table className=\"product-table\">\n//                   <thead>\n//                     <tr>\n//                       <th>Product</th>\n//                       <th>Price</th>\n//                       <th>Quantity</th>\n//                       <th>Total Price</th>\n//                     </tr>\n//                   </thead>\n//                   <tbody>\n//                     {groupedBills[date].map((bill, idx) => (\n//                       <tr key={idx} className=\"product-info no-border\">\n//                         <td>{bill.name}</td>\n//                         <td>${bill.price}</td>\n//                         <td>x{bill.quantity}</td>\n//                         <td>${bill.totalPrice}</td>\n//                       </tr>\n//                     ))}\n//                     <tr>\n//                       <td colSpan=\"3\" className=\"text-right\">\n//                         <strong>Total</strong>\n//                       </td>\n//                       <td>\n//                         <strong>${total}</strong>\n//                       </td>\n//                     </tr>\n//                   </tbody>\n//                 </table>\n//               </div>\n//             );\n//           })}\n//         </div>\n//       </div>\n//     </Modal>\n//   );\n// }\n// import React, { useState, useEffect } from \"react\";\n// import Modal from \"react-modal\";\n// import \"../Styles/Bill.css\";\n\n// // Group bills by order date\n// const groupBillsByDate = (bills) => {\n//   return bills.reduce((groups, bill) => {\n//     const date = new Date(bill.id).toLocaleDateString();\n//     if (!groups[date]) {\n//       groups[date] = [];\n//     }\n//     groups[date].push(bill);\n//     return groups;\n//   }, {});\n// };\n\n// export default function OrderBill({ isOpen, onRequestClose }) {\n//   const [bills, setBills] = useState([]);\n\n//   useEffect(() => {\n//     const getBills = JSON.parse(localStorage.getItem(\"bill\")) || [];\n//     setBills(getBills);\n//   }, []);\n\n//   const groupedBills = groupBillsByDate(bills);\n\n//   return (\n//     <Modal\n//       isOpen={isOpen}\n//       onRequestClose={onRequestClose}\n//       contentLabel=\"Order Bill\"\n//       className=\"modal-content\"\n//       overlayClassName=\"modal-overlay\"\n//     >\n//       <div className=\"order-container\">\n//         <div className=\"header\">\n//           <span className=\"store-name\">Order History</span>\n//         </div>\n//         <div className=\"order-details\">\n//           {Object.keys(groupedBills).map((date, index) => {\n//             const total = groupedBills[date].reduce(\n//               (sum, bill) => sum + bill.totalPrice,\n//               0\n//             );\n//             const representativeBill = groupedBills[date][0];\n//             return (\n//               <div key={index} className=\"date-group\">\n//                 <div className=\"date\">{date}</div>\n//                 <div className=\"common-info-inline\">\n//                   <div>ID: {representativeBill.id}</div>\n//                   <div>Username: {representativeBill.username}</div>\n//                   <div>Address: {representativeBill.address}</div>\n//                 </div>\n//                 <table className=\"product-table\">\n//                   <thead>\n//                     <tr>\n//                       <th>Product</th>\n//                       <th>Price</th>\n//                       <th>Quantity</th>\n//                       <th>Total Price</th>\n//                     </tr>\n//                   </thead>\n//                   <tbody>\n//                     {groupedBills[date].map((bill, idx) => (\n//                       <tr key={idx} className=\"product-info no-border\">\n//                         <td>{bill.name}</td>\n//                         <td>${bill.price}</td>\n//                         <td>x{bill.quantity}</td>\n//                         <td>${bill.totalPrice}</td>\n//                       </tr>\n//                     ))}\n//                     <tr>\n//                       <td colSpan=\"3\" className=\"text-right\">\n//                         <strong>Total</strong>\n//                       </td>\n//                       <td>\n//                         <strong>${total}</strong>\n//                       </td>\n//                     </tr>\n//                   </tbody>\n//                 </table>\n//               </div>\n//             );\n//           })}\n//         </div>\n//       </div>\n//     </Modal>\n//   );\n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport \"../Styles/Bill.css\";\n\n// Group bills by order date\n// const groupBillsByDate = (bills) => {\n//   return bills.reduce((groups, bill) => {\n//     const date = new Date(bill.id).toLocaleDateString();\n//     if (!groups[date]) {\n//       groups[date] = [];\n//     }\n//     groups[date].push(bill);\n//     return groups;\n//   }, {});\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OrderBill({\n  isOpen,\n  onRequestClose\n}) {\n  _s();\n  const [bills, setBills] = useState([]);\n  useEffect(() => {\n    const getBills = JSON.parse(localStorage.getItem(\"bill\")) || [];\n    setBills(getBills);\n  }, []);\n\n  // const groupedBills = groupBillsByDate(bills);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: onRequestClose,\n    contentLabel: \"Order Bill\",\n    className: \"modal-content\",\n    overlayClassName: \"modal-overlay\",\n    children: bills.map(item => /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n}\n_s(OrderBill, \"xb0vwC546hmwxnq3ARDrgzs+09I=\");\n_c = OrderBill;\nvar _c;\n$RefreshReg$(_c, \"OrderBill\");","map":{"version":3,"names":["React","useState","useEffect","Modal","jsxDEV","_jsxDEV","OrderBill","isOpen","onRequestClose","_s","bills","setBills","getBills","JSON","parse","localStorage","getItem","contentLabel","className","overlayClassName","children","map","item","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Reactjs_Nhom8/complete/Reactjs/src/Components/Bill.js"],"sourcesContent":["// import Modal from \"react-modal\";\r\n// import \"../Styles/Bill.css\";\r\n\r\n// export default function OrderBill({ isOpen, onRequestClose }) {\r\n//   // Calculate total price\r\n//   // const totalPrice = orderItems.reduce((sum, item) => sum + item.total, 0);\r\n\r\n//   return (\r\n//     // <Modal\r\n//     //   isOpen={isOpen}\r\n//     //   onRequestClose={onRequestClose}\r\n//     //   contentLabel=\"Order Bill\"\r\n//     //   className=\"modal-content\"\r\n//     //   overlayClassName=\"modal-overlay\"\r\n//     // >\r\n//     //   <div className=\"order-container\">\r\n//     //     <div className=\"header\">\r\n//     //       <span className=\"store-name\">Order History</span>\r\n//     //     </div>\r\n//     //     <div className=\"order-details\">\r\n//     //       {\"Dùng map() để lập và lấy ra các thuộc tính của bill\".map(\r\n//     //         (item, index) => (\r\n//     //           <div key={index} className=\"product-info\">\r\n//     //             {/* name */}\r\n//     //             {/* address */}\r\n//     //             {/* tên sản phẩm */}\r\n//     //             {/* Giá */}\r\n//     //             {/* Số lượng */}\r\n//     //             {/* Tổng tiền của sản phẩm này */}\r\n//     //             {/* Ngày đặt */}\r\n\r\n//     //             {/* Dựa vào ngày đặt từ \"bill\" nếu mà có 2 hoặc nhiều sản phẩm trùng ngày đặt thì phân loại nó thành 1 khung , như liệu mẫu như sau */}\r\n//     //             {/* {/* name và address là thông tin chung cho cả 2 hoặc nhiều bill */}\r\n//     //             {/* tên sản phẩm 1 */}\r\n//     //             {/* Giá của sản phẩm 1*/}\r\n//     //             {/* Số lượng của sản phẩm 1 */}\r\n//     //             {/* Tổng tiền của sản phẩm 1 */}\r\n//     //             {/* ---- */}\r\n//     //             {/* tên sản phẩm 2 */}\r\n//     //             {/* Giá của sản phẩm 2*/}\r\n//     //             {/* Số lượng của sản phẩm 2 */}\r\n//     //             {/* Tổng tiền của sản phẩm 2 */}\r\n//     //             {/* Ghi tổng tiền của 2 sản phẩm trên */}\r\n//     //           </div>\r\n//     //         )\r\n//     //       )}\r\n//     //     </div>\r\n//     //   </div>\r\n//     // </Modal>\r\n//     <div></div>\r\n//   );\r\n// }\r\n\r\n// import React, { useState } from \"react\";\r\n// import Modal from \"react-modal\";\r\n// import \"../Styles/Bill.css\";\r\n\r\n// // Sample data (normally this would come from your client side storage\r\n\r\n// export default function OrderBill({ isOpen, onRequestClose }) {\r\n//   const [bills, setBills] = useState([]);\r\n//   const getBills = JSON.parse(localStorage.getItem(\"bill\")) || [];\r\n//   setBills(getBills);\r\n//   // Group bills by order date\r\n//   const groupBillsByDate = (bills) => {\r\n//     return bills.reduce((groups, bill) => {\r\n//       const date = new Date(bill.id).toLocaleDateString();\r\n//       if (!groups[date]) {\r\n//         groups[date] = [];\r\n//       }\r\n//       groups[date].push(bill);\r\n//       return groups;\r\n//     }, {});\r\n//   };\r\n\r\n//   const groupedBills = groupBillsByDate(bills);\r\n//   return (\r\n//     <Modal\r\n//       isOpen={isOpen}\r\n//       onRequestClose={onRequestClose}\r\n//       contentLabel=\"Order Bill\"\r\n//       className=\"modal-content\"\r\n//       overlayClassName=\"modal-overlay\"\r\n//     >\r\n//       <div className=\"order-container\">\r\n//         <div className=\"header\">\r\n//           <span className=\"store-name\">Order History</span>\r\n//         </div>\r\n//         <div className=\"order-details\">\r\n//           {Object.keys(groupedBills).map((date, index) => {\r\n//             const total = groupedBills[date].reduce(\r\n//               (sum, bill) => sum + bill.totalPrice,\r\n//               0\r\n//             );\r\n//             const representativeBill = groupedBills[date][0];\r\n//             return (\r\n//               <div key={index} className=\"date-group\">\r\n//                 <div className=\"date\">{date}</div>\r\n//                 <div className=\"common-info-inline\">\r\n//                   <div>Name: {representativeBill.username}</div>\r\n//                   <div>Address: {representativeBill.address}</div>\r\n//                 </div>\r\n//                 <table className=\"product-table\">\r\n//                   <thead>\r\n//                     <tr>\r\n//                       <th>Product</th>\r\n//                       <th>Price</th>\r\n//                       <th>Quantity</th>\r\n//                       <th>Total Price</th>\r\n//                     </tr>\r\n//                   </thead>\r\n//                   <tbody>\r\n//                     {groupedBills[date].map((bill, idx) => (\r\n//                       <tr key={idx} className=\"product-info no-border\">\r\n//                         <td>{bill.name}</td>\r\n//                         <td>${bill.price}</td>\r\n//                         <td>x{bill.quantity}</td>\r\n//                         <td>${bill.totalPrice}</td>\r\n//                       </tr>\r\n//                     ))}\r\n//                     <tr>\r\n//                       <td colSpan=\"3\" className=\"text-right\">\r\n//                         <strong>Total</strong>\r\n//                       </td>\r\n//                       <td>\r\n//                         <strong>${total}</strong>\r\n//                       </td>\r\n//                     </tr>\r\n//                   </tbody>\r\n//                 </table>\r\n//               </div>\r\n//             );\r\n//           })}\r\n//         </div>\r\n//       </div>\r\n//     </Modal>\r\n//   );\r\n// }\r\n// import React, { useState, useEffect } from \"react\";\r\n// import Modal from \"react-modal\";\r\n// import \"../Styles/Bill.css\";\r\n\r\n// // Group bills by order date\r\n// const groupBillsByDate = (bills) => {\r\n//   return bills.reduce((groups, bill) => {\r\n//     const date = new Date(bill.id).toLocaleDateString();\r\n//     if (!groups[date]) {\r\n//       groups[date] = [];\r\n//     }\r\n//     groups[date].push(bill);\r\n//     return groups;\r\n//   }, {});\r\n// };\r\n\r\n// export default function OrderBill({ isOpen, onRequestClose }) {\r\n//   const [bills, setBills] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const getBills = JSON.parse(localStorage.getItem(\"bill\")) || [];\r\n//     setBills(getBills);\r\n//   }, []);\r\n\r\n//   const groupedBills = groupBillsByDate(bills);\r\n\r\n//   return (\r\n//     <Modal\r\n//       isOpen={isOpen}\r\n//       onRequestClose={onRequestClose}\r\n//       contentLabel=\"Order Bill\"\r\n//       className=\"modal-content\"\r\n//       overlayClassName=\"modal-overlay\"\r\n//     >\r\n//       <div className=\"order-container\">\r\n//         <div className=\"header\">\r\n//           <span className=\"store-name\">Order History</span>\r\n//         </div>\r\n//         <div className=\"order-details\">\r\n//           {Object.keys(groupedBills).map((date, index) => {\r\n//             const total = groupedBills[date].reduce(\r\n//               (sum, bill) => sum + bill.totalPrice,\r\n//               0\r\n//             );\r\n//             const representativeBill = groupedBills[date][0];\r\n//             return (\r\n//               <div key={index} className=\"date-group\">\r\n//                 <div className=\"date\">{date}</div>\r\n//                 <div className=\"common-info-inline\">\r\n//                   <div>ID: {representativeBill.id}</div>\r\n//                   <div>Username: {representativeBill.username}</div>\r\n//                   <div>Address: {representativeBill.address}</div>\r\n//                 </div>\r\n//                 <table className=\"product-table\">\r\n//                   <thead>\r\n//                     <tr>\r\n//                       <th>Product</th>\r\n//                       <th>Price</th>\r\n//                       <th>Quantity</th>\r\n//                       <th>Total Price</th>\r\n//                     </tr>\r\n//                   </thead>\r\n//                   <tbody>\r\n//                     {groupedBills[date].map((bill, idx) => (\r\n//                       <tr key={idx} className=\"product-info no-border\">\r\n//                         <td>{bill.name}</td>\r\n//                         <td>${bill.price}</td>\r\n//                         <td>x{bill.quantity}</td>\r\n//                         <td>${bill.totalPrice}</td>\r\n//                       </tr>\r\n//                     ))}\r\n//                     <tr>\r\n//                       <td colSpan=\"3\" className=\"text-right\">\r\n//                         <strong>Total</strong>\r\n//                       </td>\r\n//                       <td>\r\n//                         <strong>${total}</strong>\r\n//                       </td>\r\n//                     </tr>\r\n//                   </tbody>\r\n//                 </table>\r\n//               </div>\r\n//             );\r\n//           })}\r\n//         </div>\r\n//       </div>\r\n//     </Modal>\r\n//   );\r\n// }\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport \"../Styles/Bill.css\";\r\n\r\n// Group bills by order date\r\n// const groupBillsByDate = (bills) => {\r\n//   return bills.reduce((groups, bill) => {\r\n//     const date = new Date(bill.id).toLocaleDateString();\r\n//     if (!groups[date]) {\r\n//       groups[date] = [];\r\n//     }\r\n//     groups[date].push(bill);\r\n//     return groups;\r\n//   }, {});\r\n// };\r\n\r\nexport default function OrderBill({ isOpen, onRequestClose }) {\r\n  const [bills, setBills] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getBills = JSON.parse(localStorage.getItem(\"bill\")) || [];\r\n    setBills(getBills);\r\n  }, []);\r\n\r\n  // const groupedBills = groupBillsByDate(bills);\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onRequestClose={onRequestClose}\r\n      contentLabel=\"Order Bill\"\r\n      className=\"modal-content\"\r\n      overlayClassName=\"modal-overlay\"\r\n    >\r\n      {bills.map((item) => (\r\n        <h1>{item.name}</h1>\r\n      ))}\r\n    </Modal>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAO,oBAAoB;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,SAASA,CAAC;EAAEC,MAAM;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAC5D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMU,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE;IAC/DL,QAAQ,CAACC,QAAQ,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,oBACEP,OAAA,CAACF,KAAK;IACJI,MAAM,EAAEA,MAAO;IACfC,cAAc,EAAEA,cAAe;IAC/BS,YAAY,EAAC,YAAY;IACzBC,SAAS,EAAC,eAAe;IACzBC,gBAAgB,EAAC,eAAe;IAAAC,QAAA,EAE/BV,KAAK,CAACW,GAAG,CAAEC,IAAI,iBACdjB,OAAA;MAAAe,QAAA,EAAKE,IAAI,CAACC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEZ;AAAClB,EAAA,CAvBuBH,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}